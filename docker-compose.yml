services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ocr-rabbitmq
    ports:
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
  redis:
    image: redis:latest
    container_name: ocr-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
  web-server:
    build: .
    container_name: ocr-web-server
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - shared_data:/app/uploads
      - shared_data:/app/output
    command: sh -c "node wait-for-rabbitmq.js && npm start"
    depends_on:
      - redis
      - rabbitmq
    environment:
      - REDIS_URL=redis://ocr-redis:6379
      - RABBITMQ_URL=amqp://guest:guest@ocr-rabbitmq
  preprocess-worker:
    build: .
    container_name: preprocess-worker
    volumes:
      - .:/app
      - /app/node_modules
      - shared_data:/app/uploads
      - shared_data:/app/output
    command: sh -c "node wait-for-rabbitmq.js && npm run preprocess-worker"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - REDIS_URL=redis://ocr-redis:6379
      - RABBITMQ_URL=amqp://guest:guest@ocr-rabbitmq
      - UV_THREADPOOL_SIZE=4
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [compute, utility]
  ocr-worker:
    build: .
    volumes:
      - .:/app
      - /app/node_modules
      - shared_data:/app/uploads
      - shared_data:/app/output
    command: sh -c "node wait-for-rabbitmq.js && npm run ocr-worker"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - REDIS_URL=redis://ocr-redis:6379
      - RABBITMQ_URL=amqp://guest:guest@ocr-rabbitmq
  translate-worker:
    build: .
    container_name: translate-worker
    volumes:
      - .:/app
      - /app/node_modules
      - shared_data:/app/uploads
      - shared_data:/app/output
    command: sh -c "node wait-for-rabbitmq.js && npm run translate-worker"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - REDIS_URL=redis://ocr-redis:6379
      - RABBITMQ_URL=amqp://guest:guest@ocr-rabbitmq

  pdf-worker:
    build: .
    container_name: pdf-worker
    volumes:
      - .:/app
      - /app/node_modules
      - shared_data:/app/uploads
      - shared_data:/app/output
    command: sh -c "node wait-for-rabbitmq.js && npm run pdf-worker"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - REDIS_URL=redis://ocr-redis:6379
      - RABBITMQ_URL=amqp://guest:guest@ocr-rabbitmq

volumes:
  redis_data:
  rabbitmq_data:
  shared_data: